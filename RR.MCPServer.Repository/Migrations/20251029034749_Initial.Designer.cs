// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RR.MCPServer.Repository;

#nullable disable

namespace RR.MCPServer.Repository.Migrations
{
    [DbContext(typeof(PolicyDbContext))]
    [Migration("20251029034749_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RR.MCPServer.Entity.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CarrierAddress")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("CarrierContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CertificateNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeactivated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("InsuredAddress")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("InsuredName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("InsuredPhone")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.Property<string>("PolicyNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProducerAddress")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ProducerEmail")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CarrierContactId");

                    b.ToTable("Policy", "Core");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d"),
                            Carrier = "Liberty Mutual Insurance",
                            CarrierAddress = "175 Berkeley St, Boston, MA 02116",
                            CarrierContactId = new Guid("d2ca3e40-dadd-44ba-8fcf-bbf92ec4ab3c"),
                            CertificateNumber = "CERT-001-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 1, 1),
                            ExpirationDate = new DateOnly(2026, 1, 1),
                            InsuredAddress = "456 Business Blvd, New York, NY 10002",
                            InsuredName = "Acme Corporation",
                            InsuredPhone = "(212) 555-0001",
                            IssueDate = new DateOnly(2024, 12, 15),
                            PolicyNumber = "POL-2025-001",
                            Producer = "ABC Insurance Agency",
                            ProducerAddress = "123 Main St, Suite 100, New York, NY 10001",
                            ProducerEmail = "contact@abcinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e"),
                            Carrier = "State Farm Insurance",
                            CarrierAddress = "One State Farm Plaza, Bloomington, IL 61710",
                            CarrierContactId = new Guid("18dd538a-8c86-4e63-96aa-af4c6012b914"),
                            CertificateNumber = "CERT-002-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 1, 15),
                            ExpirationDate = new DateOnly(2026, 1, 15),
                            InsuredAddress = "321 Technology Dr, San Francisco, CA 94102",
                            InsuredName = "Global Tech Solutions",
                            InsuredPhone = "(415) 555-0002",
                            IssueDate = new DateOnly(2025, 1, 5),
                            PolicyNumber = "POL-2025-002",
                            Producer = "Smith & Associates Insurance",
                            ProducerAddress = "789 Oak Ave, Chicago, IL 60601",
                            ProducerEmail = "info@smithassociates.com"
                        },
                        new
                        {
                            Id = new Guid("3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f"),
                            Carrier = "Travelers Insurance",
                            CarrierAddress = "485 Lexington Ave, New York, NY 10017",
                            CarrierContactId = new Guid("a3b5c7d9-1234-5678-90ab-cdef12345678"),
                            CertificateNumber = "CERT-003-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 2, 1),
                            ExpirationDate = new DateOnly(2026, 2, 1),
                            InsuredAddress = "678 Industrial Way, Detroit, MI 48201",
                            InsuredName = "Metro Manufacturing Inc",
                            InsuredPhone = "(313) 555-0003",
                            IssueDate = new DateOnly(2025, 1, 20),
                            PolicyNumber = "POL-2025-003",
                            Producer = "Premier Insurance Group",
                            ProducerAddress = "555 Market St, Philadelphia, PA 19103",
                            ProducerEmail = "sales@premiergroup.com"
                        },
                        new
                        {
                            Id = new Guid("4d5e6f7a-8b9c-0d1e-2f3a-4b5c6d7e8f9a"),
                            Carrier = "Nationwide Insurance",
                            CarrierAddress = "1 Nationwide Plaza, Columbus, OH 43215",
                            CarrierContactId = new Guid("b4c6d8e0-2345-6789-01bc-def123456789"),
                            CertificateNumber = "CERT-004-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 2, 15),
                            ExpirationDate = new DateOnly(2026, 2, 15),
                            InsuredAddress = "890 Harbor Dr, Miami, FL 33101",
                            InsuredName = "Coastal Shipping LLC",
                            InsuredPhone = "(305) 555-0004",
                            IssueDate = new DateOnly(2025, 2, 5),
                            PolicyNumber = "POL-2025-004",
                            Producer = "Johnson Insurance Services",
                            ProducerAddress = "234 Elm St, Houston, TX 77002",
                            ProducerEmail = "team@johnsoninsurance.com"
                        },
                        new
                        {
                            Id = new Guid("5e6f7a8b-9c0d-1e2f-3a4b-5c6d7e8f9a0b"),
                            Carrier = "Allstate Insurance",
                            CarrierAddress = "2775 Sanders Rd, Northbrook, IL 60062",
                            CarrierContactId = new Guid("c5d7e9f1-3456-7890-12cd-ef1234567890"),
                            CertificateNumber = "CERT-005-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 3, 1),
                            ExpirationDate = new DateOnly(2026, 3, 1),
                            InsuredAddress = "765 Medical Center Dr, Boston, MA 02115",
                            InsuredName = "Summit Healthcare Group",
                            InsuredPhone = "(617) 555-0005",
                            IssueDate = new DateOnly(2025, 2, 20),
                            PolicyNumber = "POL-2025-005",
                            Producer = "Elite Risk Advisors",
                            ProducerAddress = "432 Pine St, Seattle, WA 98101",
                            ProducerEmail = "advisors@eliterisk.com"
                        },
                        new
                        {
                            Id = new Guid("6f7a8b9c-0d1e-2f3a-4b5c-6d7e8f9a0b1c"),
                            Carrier = "Progressive Insurance",
                            CarrierAddress = "6300 Wilson Mills Rd, Mayfield Village, OH 44143",
                            CarrierContactId = new Guid("d6e8f0a2-4567-8901-23de-f12345678901"),
                            CertificateNumber = "CERT-006-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 3, 15),
                            ExpirationDate = new DateOnly(2026, 3, 15),
                            InsuredAddress = "234 Builder Ln, Phoenix, AZ 85001",
                            InsuredName = "Mountain Construction Co",
                            InsuredPhone = "(602) 555-0006",
                            IssueDate = new DateOnly(2025, 3, 5),
                            PolicyNumber = "POL-2025-006",
                            Producer = "Guardian Insurance Partners",
                            ProducerAddress = "567 Broadway, Denver, CO 80202",
                            ProducerEmail = "info@guardianpartners.com"
                        },
                        new
                        {
                            Id = new Guid("7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d"),
                            Carrier = "Chubb Insurance",
                            CarrierAddress = "202 Hall's Mill Rd, Whitehouse Station, NJ 08889",
                            CarrierContactId = new Guid("e7f9a1b3-5678-9012-34ef-123456789012"),
                            CertificateNumber = "CERT-007-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 4, 1),
                            ExpirationDate = new DateOnly(2026, 4, 1),
                            InsuredAddress = "543 Commerce St, Portland, OR 97201",
                            InsuredName = "Pacific Retail Ventures",
                            InsuredPhone = "(503) 555-0007",
                            IssueDate = new DateOnly(2025, 3, 20),
                            PolicyNumber = "POL-2025-007",
                            Producer = "Capital Insurance Brokers",
                            ProducerAddress = "890 Capitol Ave, Sacramento, CA 95814",
                            ProducerEmail = "brokers@capitalinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("8b9c0d1e-2f3a-4b5c-6d7e-8f9a0b1c2d3e"),
                            Carrier = "Hartford Insurance",
                            CarrierAddress = "One Hartford Plaza, Hartford, CT 06155",
                            CarrierContactId = new Guid("f8a0b2c4-6789-0123-45f0-234567890123"),
                            CertificateNumber = "CERT-008-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 4, 15),
                            ExpirationDate = new DateOnly(2026, 4, 15),
                            InsuredAddress = "876 Transport Way, Dallas, TX 75201",
                            InsuredName = "Midland Logistics Group",
                            InsuredPhone = "(214) 555-0008",
                            IssueDate = new DateOnly(2025, 4, 5),
                            PolicyNumber = "POL-2025-008",
                            Producer = "Advantage Insurance Solutions",
                            ProducerAddress = "123 Financial Dr, Charlotte, NC 28202",
                            ProducerEmail = "solutions@advantageins.com"
                        },
                        new
                        {
                            Id = new Guid("9c0d1e2f-3a4b-5c6d-7e8f-9a0b1c2d3e4f"),
                            Carrier = "Farmers Insurance",
                            CarrierAddress = "4680 Wilshire Blvd, Los Angeles, CA 90010",
                            CarrierContactId = new Guid("a9b1c3d5-7890-1234-5601-345678901234"),
                            CertificateNumber = "CERT-009-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 5, 1),
                            ExpirationDate = new DateOnly(2026, 5, 1),
                            InsuredAddress = "432 Culinary Ct, New Orleans, LA 70112",
                            InsuredName = "Southern Food Services Inc",
                            InsuredPhone = "(504) 555-0009",
                            IssueDate = new DateOnly(2025, 4, 20),
                            PolicyNumber = "POL-2025-009",
                            Producer = "Heritage Insurance Agency",
                            ProducerAddress = "345 Heritage Blvd, Atlanta, GA 30303",
                            ProducerEmail = "agency@heritageins.com"
                        },
                        new
                        {
                            Id = new Guid("0d1e2f3a-4b5c-6d7e-8f9a-0b1c2d3e4f5a"),
                            Carrier = "AIG Insurance",
                            CarrierAddress = "175 Water St, New York, NY 10038",
                            CarrierContactId = new Guid("b0c2d4e6-8901-2345-6712-456789012345"),
                            CertificateNumber = "CERT-010-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 5, 15),
                            ExpirationDate = new DateOnly(2026, 5, 15),
                            InsuredAddress = "987 Power Plant Rd, Minneapolis, MN 55403",
                            InsuredName = "Northern Energy Systems",
                            InsuredPhone = "(612) 555-0010",
                            IssueDate = new DateOnly(2025, 5, 5),
                            PolicyNumber = "POL-2025-010",
                            Producer = "Pinnacle Risk Management",
                            ProducerAddress = "678 Executive Park, Minneapolis, MN 55402",
                            ProducerEmail = "risk@pinnaclemanagement.com"
                        },
                        new
                        {
                            Id = new Guid("1e2f3a4b-5c6d-7e8f-9a0b-1c2d3e4f5a6b"),
                            Carrier = "Zurich Insurance",
                            CarrierAddress = "1299 Zurich Way, Schaumburg, IL 60196",
                            CarrierContactId = new Guid("d2ca3e40-dadd-44ba-8fcf-bbf92ec4ab3c"),
                            CertificateNumber = "CERT-011-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 6, 1),
                            ExpirationDate = new DateOnly(2026, 6, 1),
                            InsuredAddress = "543 Farm Rd, Des Moines, IA 50309",
                            InsuredName = "Heartland Agriculture Co",
                            InsuredPhone = "(515) 555-0011",
                            IssueDate = new DateOnly(2025, 5, 20),
                            PolicyNumber = "POL-2025-011",
                            Producer = "Midwest Insurance Professionals",
                            ProducerAddress = "234 Insurance Ln, Kansas City, MO 64105",
                            ProducerEmail = "pros@midwestinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("2f3a4b5c-6d7e-8f9a-0b1c-2d3e4f5a6b7c"),
                            Carrier = "CNA Insurance",
                            CarrierAddress = "333 S Wabash Ave, Chicago, IL 60604",
                            CarrierContactId = new Guid("18dd538a-8c86-4e63-96aa-af4c6012b914"),
                            CertificateNumber = "CERT-012-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 6, 15),
                            ExpirationDate = new DateOnly(2026, 6, 15),
                            InsuredAddress = "876 Innovation Dr, San Jose, CA 95113",
                            InsuredName = "West Coast Engineering LLC",
                            InsuredPhone = "(408) 555-0012",
                            IssueDate = new DateOnly(2025, 6, 5),
                            PolicyNumber = "POL-2025-012",
                            Producer = "Coastal Insurance Advisors",
                            ProducerAddress = "765 Beach Blvd, San Diego, CA 92101",
                            ProducerEmail = "advisors@coastalinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("3a4b5c6d-7e8f-9a0b-1c2d-3e4f5a6b7c8d"),
                            Carrier = "Berkshire Hathaway Insurance",
                            CarrierAddress = "3024 Harney St, Omaha, NE 68131",
                            CarrierContactId = new Guid("a3b5c7d9-1234-5678-90ab-cdef12345678"),
                            CertificateNumber = "CERT-013-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 7, 1),
                            ExpirationDate = new DateOnly(2026, 7, 1),
                            InsuredAddress = "234 Parts Ave, Cleveland, OH 44113",
                            InsuredName = "Reliable Auto Parts Inc",
                            InsuredPhone = "(216) 555-0013",
                            IssueDate = new DateOnly(2025, 6, 20),
                            PolicyNumber = "POL-2025-013",
                            Producer = "Central States Insurance",
                            ProducerAddress = "432 Center St, Indianapolis, IN 46204",
                            ProducerEmail = "central@statesinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("4b5c6d7e-8f9a-0b1c-2d3e-4f5a6b7c8d9e"),
                            Carrier = "Kemper Insurance",
                            CarrierAddress = "200 E Randolph St, Chicago, IL 60601",
                            CarrierContactId = new Guid("b4c6d8e0-2345-6789-01bc-def123456789"),
                            CertificateNumber = "CERT-014-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 7, 15),
                            ExpirationDate = new DateOnly(2026, 7, 15),
                            InsuredAddress = "789 Research Pkwy, Raleigh, NC 27601",
                            InsuredName = "Eastern Pharmaceutical Corp",
                            InsuredPhone = "(919) 555-0014",
                            IssueDate = new DateOnly(2025, 7, 5),
                            PolicyNumber = "POL-2025-014",
                            Producer = "Atlantic Insurance Group",
                            ProducerAddress = "567 Harbor View, Baltimore, MD 21201",
                            ProducerEmail = "group@atlanticinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("5c6d7e8f-9a0b-1c2d-3e4f-5a6b7c8d9e0f"),
                            Carrier = "Markel Insurance",
                            CarrierAddress = "4521 Highwoods Pkwy, Glen Allen, VA 23060",
                            CarrierContactId = new Guid("c5d7e9f1-3456-7890-12cd-ef1234567890"),
                            CertificateNumber = "CERT-015-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 8, 1),
                            ExpirationDate = new DateOnly(2026, 8, 1),
                            InsuredAddress = "321 Resort Blvd, Aspen, CO 81611",
                            InsuredName = "Rocky Mountain Hospitality",
                            InsuredPhone = "(970) 555-0015",
                            IssueDate = new DateOnly(2025, 7, 20),
                            PolicyNumber = "POL-2025-015",
                            Producer = "Summit Insurance Partners",
                            ProducerAddress = "890 Mountain View Dr, Salt Lake City, UT 84101",
                            ProducerEmail = "partners@summitinsurance.com"
                        },
                        new
                        {
                            Id = new Guid("6d7e8f9a-0b1c-2d3e-4f5a-6b7c8d9e0f1a"),
                            Carrier = "MetLife Insurance",
                            CarrierAddress = "200 Park Ave, New York, NY 10166",
                            CarrierContactId = new Guid("d6e8f0a2-4567-8901-23de-f12345678901"),
                            CertificateNumber = "CERT-016-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 8, 15),
                            ExpirationDate = new DateOnly(2026, 8, 15),
                            InsuredAddress = "456 Broadway, Nashville, TN 37203",
                            InsuredName = "Music City Entertainment LLC",
                            InsuredPhone = "(615) 555-0016",
                            IssueDate = new DateOnly(2025, 8, 5),
                            PolicyNumber = "POL-2025-016",
                            Producer = "Professional Risk Solutions",
                            ProducerAddress = "123 Corporate Dr, Nashville, TN 37203",
                            ProducerEmail = "solutions@professionalrisk.com"
                        },
                        new
                        {
                            Id = new Guid("7e8f9a0b-1c2d-3e4f-5a6b-7c8d9e0f1a2b"),
                            Carrier = "Hanover Insurance",
                            CarrierAddress = "440 Lincoln St, Worcester, MA 01653",
                            CarrierContactId = new Guid("e7f9a1b3-5678-9012-34ef-123456789012"),
                            CertificateNumber = "CERT-017-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 9, 1),
                            ExpirationDate = new DateOnly(2026, 9, 1),
                            InsuredAddress = "567 Wharf St, Portland, ME 04101",
                            InsuredName = "New England Seafood Co",
                            InsuredPhone = "(207) 555-0017",
                            IssueDate = new DateOnly(2025, 8, 20),
                            PolicyNumber = "POL-2025-017",
                            Producer = "Northeast Insurance Specialists",
                            ProducerAddress = "234 Main St, Portland, ME 04101",
                            ProducerEmail = "specialists@northeastins.com"
                        },
                        new
                        {
                            Id = new Guid("8f9a0b1c-2d3e-4f5a-6b7c-8d9e0f1a2b3c"),
                            Carrier = "AmTrust Insurance",
                            CarrierAddress = "59 Maiden Ln, New York, NY 10038",
                            CarrierContactId = new Guid("f8a0b2c4-6789-0123-45f0-234567890123"),
                            CertificateNumber = "CERT-018-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 9, 15),
                            ExpirationDate = new DateOnly(2026, 9, 15),
                            InsuredAddress = "321 Solar Way, Tucson, AZ 85701",
                            InsuredName = "Desert Solar Solutions",
                            InsuredPhone = "(520) 555-0018",
                            IssueDate = new DateOnly(2025, 9, 5),
                            PolicyNumber = "POL-2025-018",
                            Producer = "Southwest Risk Advisors",
                            ProducerAddress = "789 Desert Vista, Albuquerque, NM 87102",
                            ProducerEmail = "advisors@southwestrisk.com"
                        },
                        new
                        {
                            Id = new Guid("9a0b1c2d-3e4f-5a6b-7c8d-9e0f1a2b3c4d"),
                            Carrier = "Selective Insurance",
                            CarrierAddress = "40 Wantage Ave, Branchville, NJ 07890",
                            CarrierContactId = new Guid("a9b1c3d5-7890-1234-5601-345678901234"),
                            CertificateNumber = "CERT-019-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 10, 1),
                            ExpirationDate = new DateOnly(2026, 10, 1),
                            InsuredAddress = "876 Brewery Ave, Milwaukee, WI 53202",
                            InsuredName = "Wisconsin Brewing Company",
                            InsuredPhone = "(414) 555-0019",
                            IssueDate = new DateOnly(2025, 9, 20),
                            PolicyNumber = "POL-2025-019",
                            Producer = "Great Lakes Insurance Brokers",
                            ProducerAddress = "432 Lake Shore Dr, Milwaukee, WI 53202",
                            ProducerEmail = "brokers@greatlakesins.com"
                        },
                        new
                        {
                            Id = new Guid("0b1c2d3e-4f5a-6b7c-8d9e-0f1a2b3c4d5e"),
                            Carrier = "QBE Insurance",
                            CarrierAddress = "55 Water St, New York, NY 10041",
                            CarrierContactId = new Guid("b0c2d4e6-8901-2345-6712-456789012345"),
                            CertificateNumber = "CERT-020-2025",
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EffectiveDate = new DateOnly(2025, 10, 15),
                            ExpirationDate = new DateOnly(2026, 10, 15),
                            InsuredAddress = "234 Tech Campus Dr, Redmond, WA 98052",
                            InsuredName = "Evergreen Technology Corp",
                            InsuredPhone = "(425) 555-0020",
                            IssueDate = new DateOnly(2025, 10, 5),
                            PolicyNumber = "POL-2025-020",
                            Producer = "Pacific Northwest Insurance",
                            ProducerAddress = "567 Pioneer Square, Seattle, WA 98104",
                            ProducerEmail = "team@pacificnorthwestins.com"
                        });
                });

            modelBuilder.Entity("RR.MCPServer.Entity.Underwriter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateDeactivated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Underwriter", "Core");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2ca3e40-dadd-44ba-8fcf-bbf92ec4ab3c"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "john.smith@insurance.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Title = "Senior Underwriter"
                        },
                        new
                        {
                            Id = new Guid("18dd538a-8c86-4e63-96aa-af4c6012b914"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "sarah.johnson@insurance.com",
                            FirstName = "Sarah",
                            LastName = "Johnson",
                            Title = "Lead Underwriter"
                        },
                        new
                        {
                            Id = new Guid("a3b5c7d9-1234-5678-90ab-cdef12345678"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "michael.williams@insurance.com",
                            FirstName = "Michael",
                            LastName = "Williams",
                            Title = "Underwriter"
                        },
                        new
                        {
                            Id = new Guid("b4c6d8e0-2345-6789-01bc-def123456789"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "emily.brown@insurance.com",
                            FirstName = "Emily",
                            LastName = "Brown",
                            Title = "Senior Underwriter"
                        },
                        new
                        {
                            Id = new Guid("c5d7e9f1-3456-7890-12cd-ef1234567890"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "david.davis@insurance.com",
                            FirstName = "David",
                            LastName = "Davis",
                            Title = "Chief Underwriter"
                        },
                        new
                        {
                            Id = new Guid("d6e8f0a2-4567-8901-23de-f12345678901"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "jessica.martinez@insurance.com",
                            FirstName = "Jessica",
                            LastName = "Martinez",
                            Title = "Underwriter"
                        },
                        new
                        {
                            Id = new Guid("e7f9a1b3-5678-9012-34ef-123456789012"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "robert.garcia@insurance.com",
                            FirstName = "Robert",
                            LastName = "Garcia",
                            Title = "Senior Underwriter"
                        },
                        new
                        {
                            Id = new Guid("f8a0b2c4-6789-0123-45f0-234567890123"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "amanda.rodriguez@insurance.com",
                            FirstName = "Amanda",
                            LastName = "Rodriguez",
                            Title = "Lead Underwriter"
                        },
                        new
                        {
                            Id = new Guid("a9b1c3d5-7890-1234-5601-345678901234"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "christopher.wilson@insurance.com",
                            FirstName = "Christopher",
                            LastName = "Wilson",
                            Title = "Underwriter"
                        },
                        new
                        {
                            Id = new Guid("b0c2d4e6-8901-2345-6712-456789012345"),
                            DateCreated = new DateTimeOffset(new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "jennifer.taylor@insurance.com",
                            FirstName = "Jennifer",
                            LastName = "Taylor",
                            Title = "Senior Underwriter"
                        });
                });

            modelBuilder.Entity("RR.MCPServer.Entity.Policy", b =>
                {
                    b.HasOne("RR.MCPServer.Entity.Underwriter", "CarrierContact")
                        .WithMany()
                        .HasForeignKey("CarrierContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarrierContact");
                });
#pragma warning restore 612, 618
        }
    }
}
